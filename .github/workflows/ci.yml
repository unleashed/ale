on:
  pull_request:

name: ci

jobs:
  fmt-nightly:
    name: Rustfmt (nightly)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      #- id: component
      #  uses: actions-rs/components-nightly@v1
      #  with:
      #    target: x86_64-unknown-linux-gnu
      #    component: rustfmt

      - name: Install latest nightly toolchain with rustfmt available
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          #toolchain: ${{ steps.component.outputs.toolchain }}
          toolchain: nightly
          override: true
          components: rustfmt

      #- name: Install rustfmt
      #  run: rustup component add rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: fmt
          args: --all -- --check

  clippy-nightly:
    name: Clippy (nightly)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      #- id: component
      #  uses: actions-rs/components-nightly@v1
      #  with:
      #    target: x86_64-unknown-linux-gnu
      #    component: clippy

      - name: Install latest nightly toolchain with clippy available
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          #toolchain: ${{ steps.component.outputs.toolchain }}
          toolchain: nightly
          override: true
          components: clippy

      #- name: Install clippy
      #  run: rustup component add clippy

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        rust:
          - stable
          - nightly
        release:
          - --release
          - ''
        exclude:
          - rust: nightly
            release: --release
          - os: macOS-latest
            rust: nightly
          - os: macOS-latest
            release: --release
          - os: windows-latest
            rust: nightly
          - os: windows-latest
            release: --release
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install ${{ matrix.rust }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features ${{ matrix.release }}
